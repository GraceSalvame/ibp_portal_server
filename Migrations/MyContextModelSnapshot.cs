// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ibp_portal_server.Context;

#nullable disable

namespace ibp_portal_server.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ibp_portal_server.Model.Account_status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<int>("reference_id")
                        .HasColumnType("int");

                    b.Property<string>("reference_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("status_id");

                    b.ToTable("Account_statuses");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Activity_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("reference_id")
                        .HasColumnType("int");

                    b.Property<string>("reference_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("Activity_logs");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Branch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Card_replenishment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.ToTable("Card_replenishments");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Corporate_affiliate", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ibp_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("rank")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("ibp_id");

                    b.ToTable("Corporate_affiliates");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Emergency_contact", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Ibpid")
                        .HasColumnType("int");

                    b.Property<string>("contact_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ibp_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("Ibpid");

                    b.HasIndex("ibp_id")
                        .IsUnique();

                    b.ToTable("Emergency_contacts");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Employment_sector", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Employment_sectors");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Government_id", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Government_ids");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("attachment_gcash_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("attachment_government_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("attachment_government_selfie_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("attachment_personal_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("attachment_profile_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("attachment_signature_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<DateTime>("birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<string>("civil_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("contact_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("employment_sector_id")
                        .HasColumnType("int");

                    b.Property<string>("employment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("government_id")
                        .HasColumnType("int");

                    b.Property<int>("ibp_type_id")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("occupation_business")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("recruiter_sponsor")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("recruitment_channel_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("requirements_due_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<string>("suffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("tin_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("branch_id");

                    b.HasIndex("employment_sector_id");

                    b.HasIndex("government_id");

                    b.HasIndex("ibp_type_id");

                    b.HasIndex("recruitment_channel_id");

                    b.HasIndex("status_id");

                    b.ToTable("Ibps");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp_information_update", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<byte[]>("prev_attachment_gcash_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("prev_attachment_government_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("prev_attachment_government_selfie_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("prev_attachment_personal_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("prev_attachment_profile_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<byte[]>("prev_attachment_signature_id")
                        .IsRequired()
                        .HasColumnType("image");

                    b.Property<DateTime>("prev_birthdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("prev_branch_id")
                        .HasColumnType("int");

                    b.Property<string>("prev_civil_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prev_contact_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("prev_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("prev_employment_sector_id")
                        .HasColumnType("int");

                    b.Property<string>("prev_employment_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("prev_firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prev_gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("prev_government_id")
                        .HasColumnType("int");

                    b.Property<int>("prev_ibp_type_id")
                        .HasColumnType("int");

                    b.Property<string>("prev_lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prev_middle_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prev_occupation_business")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("prev_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("prev_recruiter_sponsor")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("prev_recruitment_channel_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("prev_requirements_due_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("prev_suffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("prev_tin_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("prev_branch_id");

                    b.HasIndex("prev_employment_sector_id");

                    b.HasIndex("prev_government_id");

                    b.HasIndex("prev_ibp_type_id");

                    b.HasIndex("prev_recruitment_channel_id");

                    b.HasIndex("request_id");

                    b.ToTable("Ibp_information_updates");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp_registration", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("confirmed_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ibp_id")
                        .HasColumnType("int");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ibp_id");

                    b.HasIndex("role_id");

                    b.HasIndex("user_id");

                    b.ToTable("Ibp_registrations");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Ibp_types");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Lost_cash_card_deactivation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cash_card_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("physically_collected_cash_card")
                        .HasColumnType("tinyint");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.ToTable("Lost_cash_card_deactivations");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Lost_cash_card_fund_transfer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("new_cash_card_account_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("new_cash_card_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("prev_cash_card_account_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("prev_cash_card_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.ToTable("Lost_cash_card_fund_transfers");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Lost_cash_card_replacement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.ToTable("Lost_cash_card_replacements");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Mailer_pin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("card_account_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("card_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.ToTable("Mailer_pins");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Nature_of_request", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("id");

                    b.ToTable("Nature_of_requests");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Notification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<int>("destination_id")
                        .HasColumnType("int");

                    b.Property<string>("notification_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("origin_id")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<int>("payment_type_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("payment_type_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_channel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Payment_channels");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_detail", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("account_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("customer_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ibp_id")
                        .HasColumnType("int");

                    b.Property<int>("payment_id")
                        .HasColumnType("int");

                    b.Property<string>("sale_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("sales_invoice_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("sales_invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<int>("total_amount")
                        .HasColumnType("int");

                    b.Property<int>("total_deduction")
                        .HasColumnType("int");

                    b.Property<int>("total_net_amount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ibp_id");

                    b.HasIndex("payment_id");

                    b.HasIndex("status_id");

                    b.ToTable("Payment_details");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_method", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("account_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("card_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ibp_id")
                        .HasColumnType("int");

                    b.Property<int>("payment_channel_id")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ibp_id");

                    b.HasIndex("payment_channel_id");

                    b.HasIndex("status_id");

                    b.ToTable("Payment_methods");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("Role_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_confirmed")
                        .HasColumnType("datetime2");

                    b.Property<int>("payment_id")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Role_id");

                    b.HasIndex("payment_id");

                    b.HasIndex("status_id");

                    b.HasIndex("user_id");

                    b.ToTable("Payment_transactions");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("account_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("customer_code")
                        .HasColumnType("int");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("justification")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("sales_invoice_date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("sales_invoice_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.ToTable("Payout_related_concerns");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern_specification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("payout_related_concern_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("payout_related_concern_id");

                    b.ToTable("Payout_related_concern_specifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern_sub_specification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("payout_related_concern_specification_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("payout_related_concern_specification_id");

                    b.ToTable("Payout_related_concern_sub_pecifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Payout_types");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Recruitment_channel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Recruitment_channels");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<int>("ibp_id")
                        .HasColumnType("int");

                    b.Property<int>("nature_of_request_id")
                        .HasColumnType("int");

                    b.Property<int>("reference_id")
                        .HasColumnType("int");

                    b.Property<string>("reference_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("request_specification_id")
                        .HasColumnType("int");

                    b.Property<int>("request_sub_specification_id")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("branch_id");

                    b.HasIndex("ibp_id");

                    b.HasIndex("nature_of_request_id");

                    b.HasIndex("request_specification_id");

                    b.HasIndex("request_sub_specification_id");

                    b.HasIndex("status_id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_specification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("nature_of_request_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("nature_of_request_id");

                    b.ToTable("Request_specifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_sub_specification", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("request_specification_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_specification_id");

                    b.ToTable("request_sub_specifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("remarks")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("request_id")
                        .HasColumnType("int");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("request_id");

                    b.HasIndex("role_id");

                    b.HasIndex("status_id");

                    b.HasIndex("user_id");

                    b.ToTable("Request_transactions");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Role", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Status", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("ibp_portal_server.Model.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("branch_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("status_id")
                        .HasColumnType("int");

                    b.Property<int?>("user_id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("branch_id");

                    b.HasIndex("role_id");

                    b.HasIndex("status_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ibp_portal_server.Model.User_log", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("date_signed_in")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("date_signed_out")
                        .HasColumnType("datetime2");

                    b.Property<int>("reference_id")
                        .HasColumnType("int");

                    b.Property<string>("reference_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("User_logs");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Account_status", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Account_statuses")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Card_replenishment", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Card_replenishments")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Corporate_affiliate", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Ibp", "Ibp")
                        .WithMany("Corporate_affiliates")
                        .HasForeignKey("ibp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ibp");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Emergency_contact", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Ibp", null)
                        .WithMany("Emergency_contacts")
                        .HasForeignKey("Ibpid");

                    b.HasOne("ibp_portal_server.Model.Ibp", "Ibp")
                        .WithOne()
                        .HasForeignKey("ibp_portal_server.Model.Emergency_contact", "ibp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ibp");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Branch", "Branch")
                        .WithMany("Ibps")
                        .HasForeignKey("branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Employment_sector", "Employment_sector")
                        .WithMany("Ibps")
                        .HasForeignKey("employment_sector_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Government_id", "Government_id")
                        .WithMany("Ibps")
                        .HasForeignKey("government_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Ibp_type", "Ibp_type")
                        .WithMany("Ibps")
                        .HasForeignKey("ibp_type_id");

                    b.HasOne("ibp_portal_server.Model.Recruitment_channel", "Recruitment_channel")
                        .WithMany("Ibps")
                        .HasForeignKey("recruitment_channel_id");

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Ibps")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Employment_sector");

                    b.Navigation("Government_id");

                    b.Navigation("Ibp_type");

                    b.Navigation("Recruitment_channel");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp_information_update", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Branch", "Branch")
                        .WithMany("Ibp_information_updates")
                        .HasForeignKey("prev_branch_id");

                    b.HasOne("ibp_portal_server.Model.Employment_sector", "Employment_sector")
                        .WithMany("Ibp_information_updates")
                        .HasForeignKey("prev_employment_sector_id");

                    b.HasOne("ibp_portal_server.Model.Government_id", "Government_id")
                        .WithMany("Ibp_information_updates")
                        .HasForeignKey("prev_government_id");

                    b.HasOne("ibp_portal_server.Model.Ibp_type", "Ibp_type")
                        .WithMany("Ibp_information_updates")
                        .HasForeignKey("prev_ibp_type_id");

                    b.HasOne("ibp_portal_server.Model.Recruitment_channel", "Recruitment_channel")
                        .WithMany("Ibp_information_updates")
                        .HasForeignKey("prev_recruitment_channel_id");

                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Ibp_information_updates")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Employment_sector");

                    b.Navigation("Government_id");

                    b.Navigation("Ibp_type");

                    b.Navigation("Recruitment_channel");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp_registration", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Ibp", "Ibp")
                        .WithMany("Ibp_registrations")
                        .HasForeignKey("ibp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Role", "Role")
                        .WithMany("Ibp_registrations")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.User", "User")
                        .WithMany("Ibp_registrations")
                        .HasForeignKey("user_id");

                    b.Navigation("Ibp");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Lost_cash_card_deactivation", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Lost_cash_card_deactivations")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Lost_cash_card_fund_transfer", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Lost_cash_card_fund_transfers")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Lost_cash_card_replacement", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Lost_cash_card_replacements")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Mailer_pin", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Mailer_pins")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Payout_type", "Payout_type")
                        .WithMany("Payments")
                        .HasForeignKey("payment_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payout_type");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_detail", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Ibp", "Ibp")
                        .WithMany("Payment_details")
                        .HasForeignKey("ibp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Payment", "Payment")
                        .WithMany("Payment_details")
                        .HasForeignKey("payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Payment_details")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ibp");

                    b.Navigation("Payment");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_method", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Ibp", "Ibp")
                        .WithMany("Payment_methods")
                        .HasForeignKey("ibp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Payment_channel", "Payment_channel")
                        .WithMany("Payment_Methods")
                        .HasForeignKey("payment_channel_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Payment_methods")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ibp");

                    b.Navigation("Payment_channel");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_transaction", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Role", "Role")
                        .WithMany("Payment_transactions")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Payment", "Payment")
                        .WithMany("Payment_transactions")
                        .HasForeignKey("payment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Payment_transactions")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.User", "User")
                        .WithMany("Payment_transactions")
                        .HasForeignKey("user_id");

                    b.Navigation("Payment");

                    b.Navigation("Role");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Payout_related_concerns")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern_specification", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Payout_related_concern", "Payout_related_concern")
                        .WithMany("Payout_related_concern_specifications")
                        .HasForeignKey("payout_related_concern_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payout_related_concern");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern_sub_specification", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Payout_related_concern_specification", "Payout_related_concern_specification")
                        .WithMany("Payout_related_concern_sub_specifications")
                        .HasForeignKey("payout_related_concern_specification_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payout_related_concern_specification");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Branch", "Branch")
                        .WithMany("Requests")
                        .HasForeignKey("branch_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Ibp", "Ibp")
                        .WithMany("Requests")
                        .HasForeignKey("ibp_id");

                    b.HasOne("ibp_portal_server.Model.Nature_of_request", "Nature_of_request")
                        .WithMany("Requests")
                        .HasForeignKey("nature_of_request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Request_specification", "Request_specification")
                        .WithMany("Requests")
                        .HasForeignKey("request_specification_id");

                    b.HasOne("ibp_portal_server.Model.Request_sub_specification", "Request_sub_specification")
                        .WithMany("Requests")
                        .HasForeignKey("request_sub_specification_id");

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Requests")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Ibp");

                    b.Navigation("Nature_of_request");

                    b.Navigation("Request_specification");

                    b.Navigation("Request_sub_specification");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_specification", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Nature_of_request", "Nature_of_request")
                        .WithMany("Request_specifications")
                        .HasForeignKey("nature_of_request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nature_of_request");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_sub_specification", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request_specification", "Request_specification")
                        .WithMany("request_sub_specifications")
                        .HasForeignKey("request_specification_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request_specification");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_transaction", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Request", "Request")
                        .WithMany("Request_transactions")
                        .HasForeignKey("request_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Role", "Role")
                        .WithMany("Request_transactions")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Request_transactions")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.User", "User")
                        .WithMany("Request_transactions")
                        .HasForeignKey("user_id");

                    b.Navigation("Request");

                    b.Navigation("Role");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ibp_portal_server.Model.User", b =>
                {
                    b.HasOne("ibp_portal_server.Model.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("branch_id");

                    b.HasOne("ibp_portal_server.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ibp_portal_server.Model.Status", "Status")
                        .WithMany("Users")
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Branch", b =>
                {
                    b.Navigation("Ibp_information_updates");

                    b.Navigation("Ibps");

                    b.Navigation("Requests");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Employment_sector", b =>
                {
                    b.Navigation("Ibp_information_updates");

                    b.Navigation("Ibps");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Government_id", b =>
                {
                    b.Navigation("Ibp_information_updates");

                    b.Navigation("Ibps");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp", b =>
                {
                    b.Navigation("Corporate_affiliates");

                    b.Navigation("Emergency_contacts");

                    b.Navigation("Ibp_registrations");

                    b.Navigation("Payment_details");

                    b.Navigation("Payment_methods");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Ibp_type", b =>
                {
                    b.Navigation("Ibp_information_updates");

                    b.Navigation("Ibps");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Nature_of_request", b =>
                {
                    b.Navigation("Request_specifications");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment", b =>
                {
                    b.Navigation("Payment_details");

                    b.Navigation("Payment_transactions");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payment_channel", b =>
                {
                    b.Navigation("Payment_Methods");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern", b =>
                {
                    b.Navigation("Payout_related_concern_specifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_related_concern_specification", b =>
                {
                    b.Navigation("Payout_related_concern_sub_specifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Payout_type", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Recruitment_channel", b =>
                {
                    b.Navigation("Ibp_information_updates");

                    b.Navigation("Ibps");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request", b =>
                {
                    b.Navigation("Card_replenishments");

                    b.Navigation("Ibp_information_updates");

                    b.Navigation("Lost_cash_card_deactivations");

                    b.Navigation("Lost_cash_card_fund_transfers");

                    b.Navigation("Lost_cash_card_replacements");

                    b.Navigation("Mailer_pins");

                    b.Navigation("Payout_related_concerns");

                    b.Navigation("Request_transactions");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_specification", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("request_sub_specifications");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Request_sub_specification", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Role", b =>
                {
                    b.Navigation("Ibp_registrations");

                    b.Navigation("Payment_transactions");

                    b.Navigation("Request_transactions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ibp_portal_server.Model.Status", b =>
                {
                    b.Navigation("Account_statuses");

                    b.Navigation("Ibps");

                    b.Navigation("Payment_details");

                    b.Navigation("Payment_methods");

                    b.Navigation("Payment_transactions");

                    b.Navigation("Request_transactions");

                    b.Navigation("Requests");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ibp_portal_server.Model.User", b =>
                {
                    b.Navigation("Ibp_registrations");

                    b.Navigation("Payment_transactions");

                    b.Navigation("Request_transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
